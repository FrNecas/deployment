# MIT License
#
# Copyright (c) 2018-2019 Red Hat, Inc.

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

---
- name: This is a recipe for adding let's encrypt into packit OpenShift instance
  hosts: all

  tasks:
  - name: Check for login into OpenShift
    shell: oc whoami -t
    register: oc_whoami

  - name: Output of `oc whoami`
    debug:
      var: oc_whoami

  - name: Switch to project packit-{{ deployment }}
    command: oc project packit-{{ deployment }}

  - name: Deploy Let's Encrypt CA
    shell: oc create -fhttps://raw.githubusercontent.com/tnozicka/openshift-acme/master/deploy/letsencrypt-staging/single-namespace/{role,serviceaccount,imagestream,deployment}.yaml -n packit-{{ deployment }}
    register: oc_create_let
    ignore_errors: True

  - name: Add policy into project
    shell: oc policy add-role-to-user openshift-acme --role-namespace="$(oc project --short)" -z openshift-acme

  - name: Get all from OpenShift
    shell: oc get all
    register: oc_get_all

  - name: Print output from `oc get all`
    debug:
      var: oc_get_all

  - name: Check if openshift/acme is Running already
    shell: oc get pods
    register: oc_get_pods
    until: oc_get_pods.stdout.find("Running") != -1
    retries: 10
    delay: 10

  - name: To get logs from packit-{{ deployment }}
    shell: oc logs -n packit-{{ deployment }} -f --tail=10 --follow=false deploy/openshift-acme
    register: oc_logs

  - name: Print the output of oc logs
    debug:
      var: oc_logs
